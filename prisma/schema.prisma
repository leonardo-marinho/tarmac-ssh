generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
}

model Game {
  id         Int         @id @default(autoincrement())
  name       String
  rounds     GameRound[]
  createdAt DateTime?   @default(now()) @db.Timestamp(0)
  updatedAt DateTime?   @default(now()) @updatedAt @db.Timestamp(0)
}

model GameBet {
  id           Int       @id @default(autoincrement())
  gameRoundId  Int
  userId       Int
  contractHash String
  gameRound    GameRound @relation(fields: [gameRoundId], references: [id])
  user         User      @relation(fields: [userId], references: [id])
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  updatedAt   DateTime? @default(now()) @updatedAt @db.Timestamp(0)
}

model GameRound {
  id         Int       @id @default(autoincrement())
  gameId     Int
  game       Game      @relation(fields: [gameId], references: [id])
  bets       GameBet[]
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  updatedAt DateTime? @default(now()) @updatedAt @db.Timestamp(0)
}

model User {
  id              Int               @id @default(autoincrement())
  username        String @unique
  accountHash     String @unique
  disabled        Boolean           @default(false)
  GameBet         GameBet[]
  UserTransaction UserTransaction[]
  createdAt      DateTime?         @default(now()) @db.Timestamp(0)
  updatedAt      DateTime?         @default(now()) @updatedAt @db.Timestamp(0)
}

model UserTransaction {
  id           Int       @id @default(autoincrement())
  amount       Float
  contractHash String
  userId       Int
  user         User      @relation(fields: [userId], references: [id])
  createdAt   DateTime? @default(now()) @db.Timestamp(0)
  updatedAt   DateTime? @default(now()) @updatedAt @db.Timestamp(0)
}
